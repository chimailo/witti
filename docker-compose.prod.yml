version: '3.7'

services:
  db:
    build:
      context: ./services/db
      dockerfile: Dockerfile
    env_file: .env.db
    expose:
      - 5432
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data/
        volume:
          nocopy: true

  app:
    build:
      context: ./services/app
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:5000 --access-logfile - manage:app
    depends_on:
      - db
    environment:
      - APP_SETTINGS=src.config.ProductionConfig
      - DATABASE=postgres
      - FLASK_APP=src/__init__.py
      - FLASK_ENV=production
      - SQL_HOST=db
      - SQL_PORT=5432
    expose:
      - 5000

  # client:
  #   build:
  #     context: ./services/client
  #     dockerfile: Dockerfile
  #     args:
  #       - NODE_ENV=production
  #       - REACT_APP_API_URL=${REACT_APP_API_URL}
  #   container_name: client
  #   ports:
  #     - '3030:80'
  #   depends_on:
  #     - src

  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    depends_on:
      - src
    restart: always

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic
  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic

volumes:
  postgres_data:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  elastic:
    driver: bridge
